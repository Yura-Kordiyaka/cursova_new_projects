name: Hello World

on:
  push:
    branches:  ['develop']
  pull_request:
    branches: ['develop']
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    - name: Set up Docker
    uses: crazy-max/ghaction-setup-docker@v3
        with:
          daemon-config: |
            {
              "debug": true,
              "features": {
                "containerd-snapshotter": true
              }
            }
      
      - name: Check out code
        uses: actions/checkout@v3
      
      - name: List files in app directory
        run: |
            cd mysite
            ls -al

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.10'

      - name: Install requirements
        run: |
          cd mysite
          python -m pip install --upgrade pip
          pip install -r requirements.txt

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Install Docker
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            ca-certificates \
            curl \
            gnupg \
            lsb-release
          sudo mkdir -p /etc/apt/keyrings
          curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg
          echo \
            "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu \
            $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
          sudo apt-get update
          sudo apt-get install -y docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin
          sudo systemctl start docker
          sudo systemctl enable docker
      
      - name: Check out code
        uses: actions/checkout@v3

      - name: Create Docker container
        run: |
          cd mysite
          sudo docker-compose up -d
